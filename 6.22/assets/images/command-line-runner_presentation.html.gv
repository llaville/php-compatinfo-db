digraph {
  graph [name="G" overlap="false" rankdir="LR" bgcolor="transparent"]
  node [fontname="Verdana" fontsize=8 shape="none" margin=0 fillcolor="#FEFECE" style="filled"]
  edge [fontname="Verdana" fontsize=8]
  subgraph cluster_0 {
    graph [bgcolor="BurlyWood"]
    label = "Bartlett\\CompatInfoDb\\Presentation\\Console"
    "Bartlett\\CompatInfoDb\\Presentation\\Console\\Application" [shape="none" label=<
<table cellspacing="0" border="0" cellborder="1">
    <tr><td bgcolor="#eeeeee"><b><br/>Application</b></td></tr>
    <tr><td><table border="0" cellspacing="0" cellpadding="2">
    <tr><td align="left">+ «static» NAME : string = "Database\ handler\ for\ CompatInfo" {readOnly}</td></tr>
</table></td></tr>
    <tr><td><table border="0" cellspacing="0" cellpadding="2">
    <tr><td align="left"># container</td></tr>
</table></td></tr>
    <tr><td><table border="0" cellspacing="0" cellpadding="2">
    <tr><td align="left">+ setContainer(container : Symfony\\Component\\DependencyInjection\\ContainerInterface = «unknown») : void</td></tr>
    <tr><td align="left">+ __construct()</td></tr>
    <tr><td align="left"># getDefaultInputDefinition() : Symfony\\Component\\Console\\Input\\InputDefinition</td></tr>
    <tr><td align="left">+ run(input : Symfony\\Component\\Console\\Input\\InputInterface = «unknown», output : Symfony\\Component\\Console\\Output\\OutputInterface = «unknown») : int</td></tr>
    <tr><td align="left">+ getHelp() : string</td></tr>
    <tr><td align="left">+ getVersion() : string</td></tr>
    <tr><td align="left">+ getLongVersion() : string</td></tr>
    <tr><td align="left">+ getApplicationParameters() : array</td></tr>
    <tr><td align="left">+ getKernel() : object</td></tr>
</table></td></tr>
</table>>]
    "Bartlett\\CompatInfoDb\\Presentation\\Console\\ApplicationInterface" [shape="none" label=<
<table cellspacing="0" border="0" cellborder="1">
    <tr><td bgcolor="#eeeeee"><b>«interface»<br/>ApplicationInterface</b></td></tr>
    <tr><td><table border="0" cellspacing="0" cellpadding="2">
    <tr><td align="left">+ «static» NAME : string = "Database\ handler\ for\ CompatInfo" {readOnly}</td></tr>
</table></td></tr>
    <tr><td></td></tr>
    <tr><td><table border="0" cellspacing="0" cellpadding="2">
    <tr><td align="left">+ «abstract» setContainer(container : Symfony\\Component\\DependencyInjection\\ContainerInterface = «unknown») : void</td></tr>
    <tr><td align="left">+ «abstract» setCommandLoader(commandLoader : Symfony\\Component\\Console\\CommandLoader\\CommandLoaderInterface)</td></tr>
    <tr><td align="left">+ «abstract» getName() : string</td></tr>
    <tr><td align="left">+ «abstract» getLongVersion() : string</td></tr>
    <tr><td align="left">+ «abstract» getApplicationParameters() : array</td></tr>
    <tr><td align="left">+ «abstract» getKernel() : object</td></tr>
</table></td></tr>
</table>>]
  }
  subgraph cluster_1 {
    label = "Symfony\\Component\\Console"
    "Symfony\\Component\\Console\\Application" [shape="none" label=<
<table cellspacing="0" border="0" cellborder="1">
    <tr><td bgcolor="#eeeeee"><b><br/>Application</b></td></tr>
    <tr><td><table border="0" cellspacing="0" cellpadding="2">
    <tr><td align="left">– commands = []</td></tr>
    <tr><td align="left">– wantHelps = false</td></tr>
    <tr><td align="left">– runningCommand</td></tr>
    <tr><td align="left">– name</td></tr>
    <tr><td align="left">– version</td></tr>
    <tr><td align="left">– commandLoader</td></tr>
    <tr><td align="left">– catchExceptions = true</td></tr>
    <tr><td align="left">– catchErrors = false</td></tr>
    <tr><td align="left">– autoExit = true</td></tr>
    <tr><td align="left">– definition</td></tr>
    <tr><td align="left">– helperSet</td></tr>
    <tr><td align="left">– dispatcher</td></tr>
    <tr><td align="left">– terminal</td></tr>
    <tr><td align="left">– defaultCommand</td></tr>
    <tr><td align="left">– singleCommand = false</td></tr>
    <tr><td align="left">– initialized = false</td></tr>
    <tr><td align="left">– signalRegistry</td></tr>
    <tr><td align="left">– signalsToDispatchEvent = []</td></tr>
</table></td></tr>
    <tr><td><table border="0" cellspacing="0" cellpadding="2">
    <tr><td align="left">+ __construct(name : string = 'UNKNOWN', version : string = 'UNKNOWN')</td></tr>
    <tr><td align="left">+ setDispatcher(dispatcher : Symfony\\Contracts\\EventDispatcher\\EventDispatcherInterface) : void</td></tr>
    <tr><td align="left">+ setCommandLoader(commandLoader : Symfony\\Component\\Console\\CommandLoader\\CommandLoaderInterface)</td></tr>
    <tr><td align="left">+ getSignalRegistry() : Symfony\\Component\\Console\\SignalRegistry\\SignalRegistry</td></tr>
    <tr><td align="left">+ setSignalsToDispatchEvent(signalsToDispatchEvent : int = «unknown»)</td></tr>
    <tr><td align="left">+ run(input : Symfony\\Component\\Console\\Input\\InputInterface = «unknown», output : Symfony\\Component\\Console\\Output\\OutputInterface = «unknown») : int</td></tr>
    <tr><td align="left">+ doRun(input : Symfony\\Component\\Console\\Input\\InputInterface, output : Symfony\\Component\\Console\\Output\\OutputInterface)</td></tr>
    <tr><td align="left">+ reset()</td></tr>
    <tr><td align="left">+ setHelperSet(helperSet : Symfony\\Component\\Console\\Helper\\HelperSet)</td></tr>
    <tr><td align="left">+ getHelperSet() : Symfony\\Component\\Console\\Helper\\HelperSet</td></tr>
    <tr><td align="left">+ setDefinition(definition : Symfony\\Component\\Console\\Input\\InputDefinition)</td></tr>
    <tr><td align="left">+ getDefinition() : Symfony\\Component\\Console\\Input\\InputDefinition</td></tr>
    <tr><td align="left">+ complete(input : Symfony\\Component\\Console\\Completion\\CompletionInput, suggestions : Symfony\\Component\\Console\\Completion\\CompletionSuggestions) : void</td></tr>
    <tr><td align="left">+ getHelp() : string</td></tr>
    <tr><td align="left">+ areExceptionsCaught() : bool</td></tr>
    <tr><td align="left">+ setCatchExceptions(boolean : bool)</td></tr>
    <tr><td align="left">+ setCatchErrors(catchErrors : bool = true) : void</td></tr>
    <tr><td align="left">+ isAutoExitEnabled() : bool</td></tr>
    <tr><td align="left">+ setAutoExit(boolean : bool)</td></tr>
    <tr><td align="left">+ getName() : string</td></tr>
    <tr><td align="left">+ setName(name : string)</td></tr>
    <tr><td align="left">+ getVersion() : string</td></tr>
    <tr><td align="left">+ setVersion(version : string)</td></tr>
    <tr><td align="left">+ getLongVersion()</td></tr>
    <tr><td align="left">+ register(name : string) : Symfony\\Component\\Console\\Command\\Command</td></tr>
    <tr><td align="left">+ addCommands(commands : array)</td></tr>
    <tr><td align="left">+ add(command : Symfony\\Component\\Console\\Command\\Command)</td></tr>
    <tr><td align="left">+ get(name : string)</td></tr>
    <tr><td align="left">+ has(name : string) : bool</td></tr>
    <tr><td align="left">+ getNamespaces() : array</td></tr>
    <tr><td align="left">+ findNamespace(namespace : string) : string</td></tr>
    <tr><td align="left">+ find(name : string)</td></tr>
    <tr><td align="left">+ all(namespace : string = «unknown»)</td></tr>
    <tr><td align="left">+ «static» getAbbreviations(names : array) : array</td></tr>
    <tr><td align="left">+ renderThrowable(e : Throwable, output : Symfony\\Component\\Console\\Output\\OutputInterface) : void</td></tr>
    <tr><td align="left"># doRenderThrowable(e : Throwable, output : Symfony\\Component\\Console\\Output\\OutputInterface) : void</td></tr>
    <tr><td align="left"># configureIO(input : Symfony\\Component\\Console\\Input\\InputInterface, output : Symfony\\Component\\Console\\Output\\OutputInterface)</td></tr>
    <tr><td align="left"># doRunCommand(command : Symfony\\Component\\Console\\Command\\Command, input : Symfony\\Component\\Console\\Input\\InputInterface, output : Symfony\\Component\\Console\\Output\\OutputInterface)</td></tr>
    <tr><td align="left"># getCommandName(input : Symfony\\Component\\Console\\Input\\InputInterface) : ?string</td></tr>
    <tr><td align="left"># getDefaultInputDefinition() : Symfony\\Component\\Console\\Input\\InputDefinition</td></tr>
    <tr><td align="left"># getDefaultCommands() : array</td></tr>
    <tr><td align="left"># getDefaultHelperSet() : Symfony\\Component\\Console\\Helper\\HelperSet</td></tr>
    <tr><td align="left">– getAbbreviationSuggestions(abbrevs : array) : string</td></tr>
    <tr><td align="left">+ extractNamespace(name : string, limit : int = «unknown») : string</td></tr>
    <tr><td align="left">– findAlternatives(name : string, collection : iterable) : array</td></tr>
    <tr><td align="left">+ setDefaultCommand(commandName : string, isSingleCommand : bool = false) : static</td></tr>
    <tr><td align="left">+ isSingleCommand() : bool</td></tr>
    <tr><td align="left">– splitStringByWidth(string : string, width : int) : array</td></tr>
    <tr><td align="left">– extractAllNamespaces(name : string) : array</td></tr>
    <tr><td align="left">– init() : void</td></tr>
</table></td></tr>
</table>>]
  }
  subgraph cluster_2 {
    label = "Symfony\\Contracts\\Service"
    "Symfony\\Contracts\\Service\\ResetInterface" [shape="none" label=<
<table cellspacing="0" border="0" cellborder="1">
    <tr><td bgcolor="#eeeeee"><b>«interface»<br/>ResetInterface</b></td></tr>
    <tr><td></td></tr>
    <tr><td><table border="0" cellspacing="0" cellpadding="2">
    <tr><td align="left">+ «abstract» reset()</td></tr>
</table></td></tr>
</table>>]
  }
  subgraph cluster_3 {
    graph [bgcolor="LightSkyBlue"]
    label = "Bartlett\\CompatInfoDb\\Presentation\\Console\\Command"
    "Bartlett\\CompatInfoDb\\Presentation\\Console\\Command\\AboutCommand" [shape="none" label=<
<table cellspacing="0" border="0" cellborder="1">
    <tr><td bgcolor="#eeeeee"><b><br/>AboutCommand</b></td></tr>
    <tr><td><table border="0" cellspacing="0" cellpadding="2">
    <tr><td align="left">+ «static» NAME : string = "about" {readOnly}</td></tr>
</table></td></tr>
    <tr><td></td></tr>
    <tr><td><table border="0" cellspacing="0" cellpadding="2">
    <tr><td align="left"># configure() : void</td></tr>
    <tr><td align="left"># execute(input : Symfony\\Component\\Console\\Input\\InputInterface, output : Symfony\\Component\\Console\\Output\\OutputInterface) : int</td></tr>
</table></td></tr>
</table>>]
    "Bartlett\\CompatInfoDb\\Presentation\\Console\\Command\\AbstractCommand" [shape="none" label=<
<table cellspacing="0" border="0" cellborder="1">
    <tr><td bgcolor="#eeeeee"><b>«abstract»<br/>AbstractCommand</b></td></tr>
    <tr><td><table border="0" cellspacing="0" cellpadding="2">
    <tr><td align="left"># commandBus</td></tr>
    <tr><td align="left"># queryBus</td></tr>
</table></td></tr>
    <tr><td><table border="0" cellspacing="0" cellpadding="2">
    <tr><td align="left">+ __construct(commandBus : Bartlett\\CompatInfoDb\\Application\\Command\\CommandBusInterface, queryBus : Bartlett\\CompatInfoDb\\Application\\Query\\QueryBusInterface)</td></tr>
</table></td></tr>
</table>>]
    "Bartlett\\CompatInfoDb\\Presentation\\Console\\Command\\CommandInterface" [shape="none" label=<
<table cellspacing="0" border="0" cellborder="1">
    <tr><td bgcolor="#eeeeee"><b>«interface»<br/>CommandInterface</b></td></tr>
    <tr><td></td></tr>
    <tr><td></td></tr>
</table>>]
    "Bartlett\\CompatInfoDb\\Presentation\\Console\\Command\\BuildCommand" [shape="none" label=<
<table cellspacing="0" border="0" cellborder="1">
    <tr><td bgcolor="#eeeeee"><b><br/>BuildCommand</b></td></tr>
    <tr><td><table border="0" cellspacing="0" cellpadding="2">
    <tr><td align="left">+ «static» NAME : string = "db\:build" {readOnly}</td></tr>
</table></td></tr>
    <tr><td></td></tr>
    <tr><td><table border="0" cellspacing="0" cellpadding="2">
    <tr><td align="left"># configure() : void</td></tr>
    <tr><td align="left"># execute(input : Symfony\\Component\\Console\\Input\\InputInterface, output : Symfony\\Component\\Console\\Output\\OutputInterface) : int</td></tr>
</table></td></tr>
</table>>]
    "Bartlett\\CompatInfoDb\\Presentation\\Console\\Command\\CreateCommand" [shape="none" label=<
<table cellspacing="0" border="0" cellborder="1">
    <tr><td bgcolor="#eeeeee"><b><br/>CreateCommand</b></td></tr>
    <tr><td><table border="0" cellspacing="0" cellpadding="2">
    <tr><td align="left">+ «static» NAME : string = "db\:create" {readOnly}</td></tr>
</table></td></tr>
    <tr><td><table border="0" cellspacing="0" cellpadding="2">
    <tr><td align="left"># entityManager</td></tr>
</table></td></tr>
    <tr><td><table border="0" cellspacing="0" cellpadding="2">
    <tr><td align="left">+ __construct(commandBus : Bartlett\\CompatInfoDb\\Application\\Command\\CommandBusInterface, queryBus : Bartlett\\CompatInfoDb\\Application\\Query\\QueryBusInterface, entityManager : Doctrine\\ORM\\EntityManagerInterface)</td></tr>
    <tr><td align="left"># configure() : void</td></tr>
    <tr><td align="left"># execute(input : Symfony\\Component\\Console\\Input\\InputInterface, output : Symfony\\Component\\Console\\Output\\OutputInterface) : int</td></tr>
</table></td></tr>
</table>>]
    "Bartlett\\CompatInfoDb\\Presentation\\Console\\Command\\DiagnoseCommand" [shape="none" label=<
<table cellspacing="0" border="0" cellborder="1">
    <tr><td bgcolor="#eeeeee"><b><br/>DiagnoseCommand</b></td></tr>
    <tr><td><table border="0" cellspacing="0" cellpadding="2">
    <tr><td align="left">+ «static» NAME : string = "diagnose" {readOnly}</td></tr>
</table></td></tr>
    <tr><td><table border="0" cellspacing="0" cellpadding="2">
    <tr><td align="left">– entityManager</td></tr>
</table></td></tr>
    <tr><td><table border="0" cellspacing="0" cellpadding="2">
    <tr><td align="left">+ __construct(commandBus : Bartlett\\CompatInfoDb\\Application\\Command\\CommandBusInterface, queryBus : Bartlett\\CompatInfoDb\\Application\\Query\\QueryBusInterface, entityManager : Doctrine\\ORM\\EntityManagerInterface)</td></tr>
    <tr><td align="left"># configure() : void</td></tr>
    <tr><td align="left"># execute(input : Symfony\\Component\\Console\\Input\\InputInterface, output : Symfony\\Component\\Console\\Output\\OutputInterface) : int</td></tr>
    <tr><td align="left"># write(requirements : Bartlett\\CompatInfoDb\\Infrastructure\\RequirementsInterface, io : Bartlett\\CompatInfoDb\\Presentation\\Console\\StyleInterface, appName : string, appParameters : array) : void</td></tr>
</table></td></tr>
</table>>]
    "Bartlett\\CompatInfoDb\\Presentation\\Console\\Command\\InitCommand" [shape="none" label=<
<table cellspacing="0" border="0" cellborder="1">
    <tr><td bgcolor="#eeeeee"><b><br/>InitCommand</b></td></tr>
    <tr><td><table border="0" cellspacing="0" cellpadding="2">
    <tr><td align="left">+ «static» NAME : string = "db\:init" {readOnly}</td></tr>
</table></td></tr>
    <tr><td></td></tr>
    <tr><td><table border="0" cellspacing="0" cellpadding="2">
    <tr><td align="left"># configure() : void</td></tr>
    <tr><td align="left"># execute(input : Symfony\\Component\\Console\\Input\\InputInterface, output : Symfony\\Component\\Console\\Output\\OutputInterface) : int</td></tr>
</table></td></tr>
</table>>]
    "Bartlett\\CompatInfoDb\\Presentation\\Console\\Command\\ListCommand" [shape="none" label=<
<table cellspacing="0" border="0" cellborder="1">
    <tr><td bgcolor="#eeeeee"><b><br/>ListCommand</b></td></tr>
    <tr><td><table border="0" cellspacing="0" cellpadding="2">
    <tr><td align="left">+ «static» NAME : string = "db\:list" {readOnly}</td></tr>
</table></td></tr>
    <tr><td></td></tr>
    <tr><td><table border="0" cellspacing="0" cellpadding="2">
    <tr><td align="left"># configure() : void</td></tr>
    <tr><td align="left"># execute(input : Symfony\\Component\\Console\\Input\\InputInterface, output : Symfony\\Component\\Console\\Output\\OutputInterface) : int</td></tr>
    <tr><td align="left"># getExtensionVersion(name : string) : string</td></tr>
    <tr><td align="left"># getLatestPhpVersion(phpVersion : string = PHP_VERSION) : string</td></tr>
</table></td></tr>
</table>>]
    "Bartlett\\CompatInfoDb\\Presentation\\Console\\Command\\PolyfillCommand" [shape="none" label=<
<table cellspacing="0" border="0" cellborder="1">
    <tr><td bgcolor="#eeeeee"><b><br/>PolyfillCommand</b></td></tr>
    <tr><td><table border="0" cellspacing="0" cellpadding="2">
    <tr><td align="left">+ «static» NAME : string = "db\:polyfill" {readOnly}</td></tr>
</table></td></tr>
    <tr><td></td></tr>
    <tr><td><table border="0" cellspacing="0" cellpadding="2">
    <tr><td align="left"># configure() : void</td></tr>
    <tr><td align="left"># execute(input : Symfony\\Component\\Console\\Input\\InputInterface, output : Symfony\\Component\\Console\\Output\\OutputInterface) : int</td></tr>
</table></td></tr>
</table>>]
    "Bartlett\\CompatInfoDb\\Presentation\\Console\\Command\\ReleaseCommand" [shape="none" label=<
<table cellspacing="0" border="0" cellborder="1">
    <tr><td bgcolor="#eeeeee"><b><br/>ReleaseCommand</b></td></tr>
    <tr><td><table border="0" cellspacing="0" cellpadding="2">
    <tr><td align="left">+ «static» NAME : string = "db\:release" {readOnly}</td></tr>
</table></td></tr>
    <tr><td></td></tr>
    <tr><td><table border="0" cellspacing="0" cellpadding="2">
    <tr><td align="left"># configure() : void</td></tr>
    <tr><td align="left"># execute(input : Symfony\\Component\\Console\\Input\\InputInterface, output : Symfony\\Component\\Console\\Output\\OutputInterface) : int</td></tr>
</table></td></tr>
</table>>]
    "Bartlett\\CompatInfoDb\\Presentation\\Console\\Command\\ShowCommand" [shape="none" label=<
<table cellspacing="0" border="0" cellborder="1">
    <tr><td bgcolor="#eeeeee"><b><br/>ShowCommand</b></td></tr>
    <tr><td><table border="0" cellspacing="0" cellpadding="2">
    <tr><td align="left">+ «static» NAME : string = "db\:show" {readOnly}</td></tr>
</table></td></tr>
    <tr><td></td></tr>
    <tr><td><table border="0" cellspacing="0" cellpadding="2">
    <tr><td align="left"># configure() : void</td></tr>
    <tr><td align="left"># execute(input : Symfony\\Component\\Console\\Input\\InputInterface, output : Symfony\\Component\\Console\\Output\\OutputInterface) : int</td></tr>
    <tr><td align="left">– formatPolyfills(extension : Bartlett\\CompatInfoDb\\Domain\\ValueObject\\Extension, io : Bartlett\\CompatInfoDb\\Presentation\\Console\\StyleInterface) : void</td></tr>
    <tr><td align="left">– formatDeprecations(extension : Bartlett\\CompatInfoDb\\Domain\\ValueObject\\Extension, io : Bartlett\\CompatInfoDb\\Presentation\\Console\\StyleInterface) : void</td></tr>
    <tr><td align="left">– formatDependency(data : array, io : Bartlett\\CompatInfoDb\\Presentation\\Console\\StyleInterface) : void</td></tr>
    <tr><td align="left">– formatSection(data : array, section : string, io : Bartlett\\CompatInfoDb\\Presentation\\Console\\StyleInterface) : void</td></tr>
    <tr><td align="left">– ext(domain : object) : string</td></tr>
    <tr><td align="left">– php(domain : object) : string</td></tr>
    <tr><td align="left">– getPrettyVersion(name : string) : string</td></tr>
    <tr><td align="left">– constantExists(name : string, class : string = «unknown») : ?mixed</td></tr>
</table></td></tr>
</table>>]
  }
  subgraph cluster_4 {
    label = "Symfony\\Component\\Console\\Command"
    "Symfony\\Component\\Console\\Command\\Command" [shape="none" label=<
<table cellspacing="0" border="0" cellborder="1">
    <tr><td bgcolor="#eeeeee"><b><br/>Command</b></td></tr>
    <tr><td><table border="0" cellspacing="0" cellpadding="2">
    <tr><td align="left">+ «static» SUCCESS : int = 0 {readOnly}</td></tr>
    <tr><td align="left">+ «static» FAILURE : int = 1 {readOnly}</td></tr>
    <tr><td align="left">+ «static» INVALID : int = 2 {readOnly}</td></tr>
</table></td></tr>
    <tr><td><table border="0" cellspacing="0" cellpadding="2">
    <tr><td align="left"># «static» defaultName : mixed</td></tr>
    <tr><td align="left"># «static» defaultDescription : mixed</td></tr>
    <tr><td align="left">– application</td></tr>
    <tr><td align="left">– name</td></tr>
    <tr><td align="left">– processTitle</td></tr>
    <tr><td align="left">– aliases = []</td></tr>
    <tr><td align="left">– definition</td></tr>
    <tr><td align="left">– hidden = false</td></tr>
    <tr><td align="left">– help = ""</td></tr>
    <tr><td align="left">– description = ""</td></tr>
    <tr><td align="left">– fullDefinition</td></tr>
    <tr><td align="left">– ignoreValidationErrors = false</td></tr>
    <tr><td align="left">– code</td></tr>
    <tr><td align="left">– synopsis = []</td></tr>
    <tr><td align="left">– usages = []</td></tr>
    <tr><td align="left">– helperSet</td></tr>
</table></td></tr>
    <tr><td><table border="0" cellspacing="0" cellpadding="2">
    <tr><td align="left">+ «static» getDefaultName() : ?string</td></tr>
    <tr><td align="left">+ «static» getDefaultDescription() : ?string</td></tr>
    <tr><td align="left">+ __construct(name : string = «unknown»)</td></tr>
    <tr><td align="left">+ ignoreValidationErrors()</td></tr>
    <tr><td align="left">+ setApplication(application : Symfony\\Component\\Console\\Application = «unknown»)</td></tr>
    <tr><td align="left">+ setHelperSet(helperSet : Symfony\\Component\\Console\\Helper\\HelperSet)</td></tr>
    <tr><td align="left">+ getHelperSet() : ?Symfony\\Component\\Console\\Helper\\HelperSet</td></tr>
    <tr><td align="left">+ getApplication() : ?Symfony\\Component\\Console\\Application</td></tr>
    <tr><td align="left">+ isEnabled()</td></tr>
    <tr><td align="left"># configure()</td></tr>
    <tr><td align="left"># execute(input : Symfony\\Component\\Console\\Input\\InputInterface, output : Symfony\\Component\\Console\\Output\\OutputInterface)</td></tr>
    <tr><td align="left"># interact(input : Symfony\\Component\\Console\\Input\\InputInterface, output : Symfony\\Component\\Console\\Output\\OutputInterface)</td></tr>
    <tr><td align="left"># initialize(input : Symfony\\Component\\Console\\Input\\InputInterface, output : Symfony\\Component\\Console\\Output\\OutputInterface)</td></tr>
    <tr><td align="left">+ run(input : Symfony\\Component\\Console\\Input\\InputInterface, output : Symfony\\Component\\Console\\Output\\OutputInterface) : int</td></tr>
    <tr><td align="left">+ complete(input : Symfony\\Component\\Console\\Completion\\CompletionInput, suggestions : Symfony\\Component\\Console\\Completion\\CompletionSuggestions) : void</td></tr>
    <tr><td align="left">+ setCode(code : callable) : static</td></tr>
    <tr><td align="left">+ mergeApplicationDefinition(mergeArgs : bool = true) : void</td></tr>
    <tr><td align="left">+ setDefinition(definition) : static</td></tr>
    <tr><td align="left">+ getDefinition() : Symfony\\Component\\Console\\Input\\InputDefinition</td></tr>
    <tr><td align="left">+ getNativeDefinition() : Symfony\\Component\\Console\\Input\\InputDefinition</td></tr>
    <tr><td align="left">+ addArgument(name : string, mode : int = «unknown», description : string = '', default : mixed = «unknown») : static</td></tr>
    <tr><td align="left">+ addOption(name : string, shortcut = «unknown», mode : int = «unknown», description : string = '', default : mixed = «unknown») : static</td></tr>
    <tr><td align="left">+ setName(name : string) : static</td></tr>
    <tr><td align="left">+ setProcessTitle(title : string) : static</td></tr>
    <tr><td align="left">+ getName() : ?string</td></tr>
    <tr><td align="left">+ setHidden(hidden : bool = true) : static</td></tr>
    <tr><td align="left">+ isHidden() : bool</td></tr>
    <tr><td align="left">+ setDescription(description : string) : static</td></tr>
    <tr><td align="left">+ getDescription() : string</td></tr>
    <tr><td align="left">+ setHelp(help : string) : static</td></tr>
    <tr><td align="left">+ getHelp() : string</td></tr>
    <tr><td align="left">+ getProcessedHelp() : string</td></tr>
    <tr><td align="left">+ setAliases(aliases : iterable) : static</td></tr>
    <tr><td align="left">+ getAliases() : array</td></tr>
    <tr><td align="left">+ getSynopsis(short : bool = false) : string</td></tr>
    <tr><td align="left">+ addUsage(usage : string) : static</td></tr>
    <tr><td align="left">+ getUsages() : array</td></tr>
    <tr><td align="left">+ getHelper(name : string) : ?mixed</td></tr>
    <tr><td align="left">– validateName(name : string) : void</td></tr>
</table></td></tr>
</table>>]
  }
  "Symfony\\Component\\Console\\Application" -> "Symfony\\Contracts\\Service\\ResetInterface" [arrowhead="empty" style="dashed"]
  "Bartlett\\CompatInfoDb\\Presentation\\Console\\Application" -> "Symfony\\Component\\Console\\Application" [arrowhead="empty" style="filled"]
  "Bartlett\\CompatInfoDb\\Presentation\\Console\\Application" -> "Bartlett\\CompatInfoDb\\Presentation\\Console\\ApplicationInterface" [arrowhead="empty" style="dashed"]
  "Bartlett\\CompatInfoDb\\Presentation\\Console\\Command\\AbstractCommand" -> "Symfony\\Component\\Console\\Command\\Command" [arrowhead="empty" style="filled"]
  "Bartlett\\CompatInfoDb\\Presentation\\Console\\Command\\AboutCommand" -> "Bartlett\\CompatInfoDb\\Presentation\\Console\\Command\\AbstractCommand" [arrowhead="empty" style="filled"]
  "Bartlett\\CompatInfoDb\\Presentation\\Console\\Command\\AboutCommand" -> "Bartlett\\CompatInfoDb\\Presentation\\Console\\Command\\CommandInterface" [arrowhead="empty" style="dashed"]
  "Bartlett\\CompatInfoDb\\Presentation\\Console\\Command\\BuildCommand" -> "Bartlett\\CompatInfoDb\\Presentation\\Console\\Command\\AbstractCommand" [arrowhead="empty" style="filled"]
  "Bartlett\\CompatInfoDb\\Presentation\\Console\\Command\\BuildCommand" -> "Bartlett\\CompatInfoDb\\Presentation\\Console\\Command\\CommandInterface" [arrowhead="empty" style="dashed"]
  "Bartlett\\CompatInfoDb\\Presentation\\Console\\Command\\CreateCommand" -> "Bartlett\\CompatInfoDb\\Presentation\\Console\\Command\\AbstractCommand" [arrowhead="empty" style="filled"]
  "Bartlett\\CompatInfoDb\\Presentation\\Console\\Command\\CreateCommand" -> "Bartlett\\CompatInfoDb\\Presentation\\Console\\Command\\CommandInterface" [arrowhead="empty" style="dashed"]
  "Bartlett\\CompatInfoDb\\Presentation\\Console\\Command\\DiagnoseCommand" -> "Bartlett\\CompatInfoDb\\Presentation\\Console\\Command\\AbstractCommand" [arrowhead="empty" style="filled"]
  "Bartlett\\CompatInfoDb\\Presentation\\Console\\Command\\DiagnoseCommand" -> "Bartlett\\CompatInfoDb\\Presentation\\Console\\Command\\CommandInterface" [arrowhead="empty" style="dashed"]
  "Bartlett\\CompatInfoDb\\Presentation\\Console\\Command\\InitCommand" -> "Bartlett\\CompatInfoDb\\Presentation\\Console\\Command\\AbstractCommand" [arrowhead="empty" style="filled"]
  "Bartlett\\CompatInfoDb\\Presentation\\Console\\Command\\InitCommand" -> "Bartlett\\CompatInfoDb\\Presentation\\Console\\Command\\CommandInterface" [arrowhead="empty" style="dashed"]
  "Bartlett\\CompatInfoDb\\Presentation\\Console\\Command\\ListCommand" -> "Bartlett\\CompatInfoDb\\Presentation\\Console\\Command\\AbstractCommand" [arrowhead="empty" style="filled"]
  "Bartlett\\CompatInfoDb\\Presentation\\Console\\Command\\ListCommand" -> "Bartlett\\CompatInfoDb\\Presentation\\Console\\Command\\CommandInterface" [arrowhead="empty" style="dashed"]
  "Bartlett\\CompatInfoDb\\Presentation\\Console\\Command\\PolyfillCommand" -> "Bartlett\\CompatInfoDb\\Presentation\\Console\\Command\\AbstractCommand" [arrowhead="empty" style="filled"]
  "Bartlett\\CompatInfoDb\\Presentation\\Console\\Command\\PolyfillCommand" -> "Bartlett\\CompatInfoDb\\Presentation\\Console\\Command\\CommandInterface" [arrowhead="empty" style="dashed"]
  "Bartlett\\CompatInfoDb\\Presentation\\Console\\Command\\ReleaseCommand" -> "Bartlett\\CompatInfoDb\\Presentation\\Console\\Command\\AbstractCommand" [arrowhead="empty" style="filled"]
  "Bartlett\\CompatInfoDb\\Presentation\\Console\\Command\\ReleaseCommand" -> "Bartlett\\CompatInfoDb\\Presentation\\Console\\Command\\CommandInterface" [arrowhead="empty" style="dashed"]
  "Bartlett\\CompatInfoDb\\Presentation\\Console\\Command\\ShowCommand" -> "Bartlett\\CompatInfoDb\\Presentation\\Console\\Command\\AbstractCommand" [arrowhead="empty" style="filled"]
  "Bartlett\\CompatInfoDb\\Presentation\\Console\\Command\\ShowCommand" -> "Bartlett\\CompatInfoDb\\Presentation\\Console\\Command\\CommandInterface" [arrowhead="empty" style="dashed"]
}
