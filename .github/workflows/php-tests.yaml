name: Tests

on:
    # Trigger mega-linter at every push. Action will also be visible from Pull Requests to master
    push: # Comment this line to trigger action only on pull-requests (not recommended if you don't pay for GH Actions)
        paths-ignore:
            - 'docs/**'
    pull_request:
        branches: [master]
        paths-ignore:
            - 'docs/**'

concurrency:
    group: ${{ github.ref }}-${{ github.workflow }}
    cancel-in-progress: true

jobs:
    lint_files:
        name: Lint Code Base
        runs-on: ubuntu-18.04
        steps:
            -   # Git Checkout
                name: Checkout Code
                uses: actions/checkout@v2
                with:
                    token: ${{ secrets.PAT || secrets.GITHUB_TOKEN }}
                    fetch-depth: 0

            -   # Use PHP 7 as workaround to https://github.com/nvuillam/mega-linter/issues/788
                uses: "shivammathur/setup-php@v2"
                with:
                    php-version: "7.4"

            -   # Install dependencies
                name: Install Composer dependencies
                uses: "ramsey/composer-install@v1"
                with:
                    dependency-versions: "highest"
                    composer-options: "--prefer-dist"

            -   # Mega-Linter
                name: Mega-Linter
                id: ml
                  # You can override Mega-Linter flavor used to have faster performances
                # More info at https://nvuillam.github.io/mega-linter/flavors/
                uses: nvuillam/mega-linter/flavors/php@v4
                env:
                    # All available variables are described in documentation
                    # https://nvuillam.github.io/mega-linter/configuration/
                    # Validates all source when push on master, else just the git diff with master. Override with true if you always want to lint all sources
                    VALIDATE_ALL_CODEBASE: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                    # ADD YOUR CUSTOM ENV VARIABLES HERE OR DEFINE THEM IN A FILE .mega-linter.yml AT THE ROOT OF YOUR REPOSITORY
                    # DISABLE: COPYPASTE,SPELL # Uncomment to disable copy-paste and spell checks
                    LOG_LEVEL: INFO
                    TEXT_REPORTER: false

    php_tests:
        needs: lint_files

        runs-on: ${{ matrix.os }}

        strategy:
            fail-fast: false
            matrix:
                os:
                    - ubuntu-18.04
                php:
                    - 7.2
                    - 7.3
                    - 7.4
                    - 8.0
                include:
                    -
                        os: ubuntu-18.04
                        php: 7.2
                        extensions: amqp,apc,apcu,ast,bcmath,bz2,calendar,core,ctype,curl,date,dom,enchant,exif,fileinfo,filter,ftp,gd,gender,geoip,gettext,gmp,hash,iconv,igbinary,imagick,imap,intl,jsmin,json,ldap,libxml,lzf,mailparse,mbstring,mcrypt,memcache,memcached,msgpack,mysqli,oci8-2.2.0,odbc,openssl,pcntl,pcre,pdo,pgsql,phar,posix,raphf,propro,pecl_http-3.2.4,rar,rdkafka,readline,recode,redis,reflection,session,shmop,simplexml,snmp,soap,sockets,solr,spl,sqlite3,ssh2,standard,stomp,sync,sysvmsg,sysvsem,sysvshm,tidy,tokenizer,uopz,uploadprogress,uuid,wddx,xhprof,xlswriter,xml,xmldiff,xmlreader,xmlrpc,xmlwriter,xsl,yaml,zip,zlib
                        tools: phpunit
                    -
                        os: ubuntu-18.04
                        php: 7.3
                        extensions: amqp,ast,bcmath,bz2,calendar,core,ctype,curl,date,dom,enchant,exif,fileinfo,filter,ftp,gd,gender,geoip,gettext,gmp,hash,iconv,igbinary,imagick,imap,intl,jsmin,json,ldap,libxml,lzf,mailparse,mbstring,mcrypt,memcache,memcached,msgpack,mysqli,oci8-2.2.0,odbc,openssl,pcntl,pcre,pdo,pgsql,phar,posix,raphf,propro,pecl_http-3.2.4,rar,rdkafka,readline,recode,redis,reflection,session,shmop,simplexml,snmp,soap,sockets,solr,spl,sqlite3,ssh2,standard,stomp,sync,sysvmsg,sysvsem,sysvshm,tidy,tokenizer,uopz,uploadprogress,uuid,:wddx,xhprof,xlswriter,xml,xmldiff,xmlreader,xmlrpc,xmlwriter,xsl,yaml,zip,zlib
                        tools: phpunit
                    -
                        os: ubuntu-18.04
                        php: 7.4
                        extensions: amqp,apc,apcu,ast,bcmath,bz2,calendar,core,ctype,curl,date,dom,exif,fileinfo,filter,ftp,gd,gender,geoip,gettext,gmp,hash,iconv,igbinary,imagick,imap,intl,jsmin,json,ldap,libxml,lzf,mailparse,mbstring,mcrypt,memcache,memcached,msgpack,mysqli,oci8-2.2.0,odbc,openssl,pcntl,pcre,pdo,pgsql,phar,posix,raphf,propro,pecl_http-3.2.4,rar,rdkafka,readline,redis,reflection,session,shmop,simplexml,snmp,soap,sockets,solr,spl,sqlite3,ssh2,standard,stomp,sync,sysvmsg,sysvsem,sysvshm,tidy,tokenizer,uopz,uploadprogress,uuid,xhprof,xlswriter,xml,xmldiff,xmlreader,xmlrpc,xmlwriter,xsl,yaml,zip,zlib
                        tools: phpunit
                    -
                        os: ubuntu-18.04
                        php: 8.0
                        extensions: amqp,apcu,ast,bcmath,bz2,calendar,core,ctype,curl,date,dom,enchant,exif,fileinfo,filter,ftp,gd,gettext,gmp,hash,iconv,igbinary,imagick,imap,intl,json,ldap,libxml,lzf,mailparse,mbstring,mcrypt,memcache,memcached,msgpack,mysqli,oauth,oci8,opcache,openssl,pcntl,pcre,pdo,pgsql,phar,posix,raphf,pecl_http,rar,rdkafka,readline,redis,reflection,session,shmop,simplexml,sockets,spl,sqlite3,ssh2-beta,standard,sysvmsg,sysvsem,sysvshm,tokenizer,uuid,xdebug,xhprof,xlswriter,xml,xmldiff,xmlrpc-beta,xmlreader,xmlwriter,xsl,yac,zip,zlib
                        tools: phpunit

        name: "Test PHP ${{ matrix.php }} on ${{ matrix.os }}"

        steps:
            -
                name: Checkout
                uses: actions/checkout@v2

            -
                name: Setup Librairies
                run: |
                    sudo apt-get update
                    sudo apt-fast install libcurl4-openssl-dev -y
                    sudo apt-fast install libssh2-1-dev -y
                    sudo apt-fast install librdkafka-dev -y

            -
                name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php }}
                    extensions: ${{ matrix.extensions }}
                    tools: ${{ matrix.tools }}

            -
                name: Install Composer dependencies
                uses: "ramsey/composer-install@v1"
                with:
                    dependency-versions: "highest"
                    composer-options: "--prefer-dist"

            -
                name: Build Database
                run: |
                    vendor/bin/doctrine orm:schema-tool:create --ansi
                    bin/compatinfo-db db:init --ansi

            -
                name: Check Database
                run: |
                    bin/compatinfo-db diagnose --ansi
                    bin/compatinfo-db db:list --ansi --all

            -
                name: Unit tests
                run: bin/compatinfo-db doctor --ansi --with-tests
